##
# This configuration file should replace /etc/nginx/sites-available/default
##
# CP2 socket
upstream cp2_socket {  
	server unix:/home/ipol/ipolDevel/cp2/ControlPanel/run/gunicorn.sock fail_timeout=0;
}

server {
	listen [::]:80 default_server;
	listen *:80 default_server;
	resolver 127.0.0.1;
	proxy_send_timeout          600;
	proxy_read_timeout          600;
	send_timeout                600;
	client_max_body_size        500m;


	# # Enable SSL
    # listen *:443 ssl http2 default_server;
    # listen [::]:443 ssl http2 default_server;
	
	proxy_set_header X-Real-IP $remote_addr;
	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

	# Change this variable with your own user name
	set $my_user miguel;

	# Path of the static content
	location /cp/static/ {
		alias  /home/$my_user/IPOLWEBAPP_STATIC/;
	}

	# DemoExtras static resources
	location ~ ^/demo/clientApp/static/(?<demo>\d+)/(?<resource>.+) {
			expires 1d;
			alias /home/ipol/ipolDevel/shared_folder/demoExtras/$demo/http/$resource;
	}

	# Static files for the web interface
	location /demo/clientApp/ {
		alias  /home/$my_user/ipolDevel/ipol_demo/clientApp/;
		add_header        Cache-Control private;
		expires 1s;
	}

	# DEMOS
	location /demo/ {
		# If you want to see the value of a variable, the easiest way is 
		# adding a header like the example below
		# add_header X-debug-message "$host" always;
		proxy_pass  http://$host:8080;
	}

	# CP
	location /cp/ {
		add_header X-debug-message "$host" always;
		# If the distribution is Debian you need the resolver
		# resolver 127.0.0.1;
		proxy_pass http://$host:8000;
	}

	location /cp2/static/ {
		alias /home/ipol/CP2_STATIC/;
	}

	location /cp2/ {
		resolver 127.0.0.1;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header Host $http_host;
		proxy_redirect off;
		proxy_buffering off;
		if (!-f $request_filename) {
			proxy_pass http://cp2_socket;
			break;
		}
		proxy_pass http://$host:8002;
	}

	# CORE
	location /api/core/{
		rewrite ^/api/core/(.*) /$1 break;
		# If the distribution is Debian you need the resolver		
		# resolver 127.0.0.1;
		proxy_pass  http://$host:8080;
	}

	# shared_folder, run static data
	location /api/core/shared_folder/run/ {
		expires 24h;
		add_header 'Access-Control-Allow-Origin' '*';
		add_header 'Access-Control-Allow-Methods' 'GET';
		alias  /home/ipol/ipolDevel/shared_folder/run/;
	}

	# BLOBS
	location /api/blobs/ {
		rewrite ^/api/blobs/(.*) /$1 break;
		# If the distribution is Debian you need the resolver		
		# resolver 127.0.0.1;
		proxy_pass  http://$host:9001;
	}
	#
	# BLOBS static data
	location /api/blobs/staticData/ {
		expires 24h;
		add_header 'Access-Control-Allow-Origin' '*';
		add_header 'Access-Control-Allow-Methods' 'GET';
		alias  /home/ipol/ipolDevel/ipol_demo/modules/blobs/staticData/;
	}

	# ARCHIVE
	location /api/archive/ {
		rewrite ^/api/archive/(.*) /$1 break;
		# If the distribution is Debian you need the resolver		
		# resolver 127.0.0.1;
		proxy_pass  http://$host:9000;
	}
	#
	# ARCHIVE static data
	location /api/archive/staticData/ {
		expires 1y;
		add_header 'Access-Control-Allow-Origin' '*';
		add_header 'Access-Control-Allow-Methods' 'GET';
		alias  /home/ipol/ipolDevel/ipol_demo/modules/archive/staticData/;
	}

	# DEMOINFO
	location /api/demoinfo/ {
		rewrite ^/api/demoinfo/(.*) /$1 break;
		# If the distribution is Debian you need the resolver		
		# resolver 127.0.0.1;
		proxy_pass  http://$host:9002;
	}

	# DEMORUNNER
	location /api/demorunner/dr/ {
		rewrite ^/api/demorunner/dr/(.*) /$1 break;
		# If the distribution is Debian you need the resolver		
		# resolver 127.0.0.1;
		proxy_pass   http://$host:9004;
		proxy_buffering off;
	}

	# CONVERSION
	location /api/conversion/ {
		rewrite ^/api/conversion/(.*) /$1 break;
		# If the distribution is Debian you need the resolver		
		# resolver 127.0.0.1;
		proxy_pass   http://$host:9003;
	}

	location /  {
		return  301 /demo/;
		# If the distribution is Debian you need the resolver		
		# resolver 127.0.0.1;
		proxy_pass  http://$host:8080;
   	}
}
