#!/bin/bash

virtualenv=venv/bin/activate

if [ ! -d 'venv' ]; then
  python3.9 -m virtualenv venv
  source $virtualenv
  pip install -r requirements.txt
fi

source $virtualenv

NAME="cp2"                                  # Name of the application
USER=$USER                                        # the user to run as
PORT="${CP2_PORT:-8002}"
DJANGODIR=/home/${USER}/ipolDevel/cp2/ControlPanel             # Django project directory
SOCKFILE=/home/${USER}/ipolDevel/cp2/ControlPanel/run/gunicorn.sock  # we will communicte using this unix socket
                                     # the group to run as
NUM_WORKERS=3                                     # how many worker processes should Gunicorn spawn
DJANGO_SETTINGS_MODULE=ControlPanel.settings             # which settings file should Django use
DJANGO_WSGI_MODULE=ControlPanel.wsgi                     # WSGI module name

echo "Starting $NAME as $USER on port $PORT"

# Create the run directory if it doesn't exist
RUNDIR=$(dirname $SOCKFILE)
test -d $RUNDIR || mkdir -p $RUNDIR

# Start your Django Unicorn
# Programs meant to be run under supervisor should not daemonize themselves (do not use --daemon)
cd ControlPanel/

echo "gunicorn ControlPanel.wsgi \
  --name $NAME \
  --workers $NUM_WORKERS \
  --user=$USER \
  --bind=unix:$SOCKFILE \
  --log-level=debug \
  --log-file=- \ "
exec gunicorn -b 127.0.0.1:${PORT} ControlPanel.wsgi \
  --name $NAME \
  --workers $NUM_WORKERS \
  --user=$USER \
  --bind=unix:$SOCKFILE \
  --log-level=debug \
  --log-file=- \

